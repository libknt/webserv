cgi request{
      メタ変数のrequest
      meta-variable-name =  "AUTH_TYPE" | "CONTENT_LENGTH" |
                        "CONTENT_TYPE" | "GATEWAY_INTERFACE" |
                        "PATH_INFO" | "PATH_TRANSLATED" |
                        "QUERY_STRING" | "REMOTE_ADDR" |
                        "REMOTE_HOST" | "REMOTE_IDENT" |
                        "REMOTE_USER" | "REQUEST_METHOD" |
                        "SCRIPT_NAME" | "SERVER_NAME" |
                        "SERVER_PORT" | "SERVER_PROTOCOL" |
                        "SERVER_SOFTWARE" | scheme |
      protocol-var-name  = ( protocol | scheme ) "_" var-name
      scheme             = alpha *( alpha | digit | "+" | "-" | "." )
      var-name           = token
      extension-var-name = token


      4.3.1. GET
      GETメソッドは、スクリプトがメタ変数値に基づいて文書を作成する必要があることを示します。慣例により、GETメソッドは 'safe'と 'idempotent'です。
      GETメソッドの意味は、プロトコル固有のメタ変数によって変更され洗練されてもよい。
      4.3.2. POST
      POSTメソッドは、メタ変数値に加えて、スクリプトの処理を実行し、要求メッセージ本文のデータに基づいて文書を作成するために使用されます。一般的な使用はHTML [18]でのフォーム送信は、永続的な影響を持つスクリプトによる処理を開始することを目的としています。このようなデータベースの変更。
      スクリプトは、接続されているメッセージ本文を読み込む前にCONTENT_LENGTH変数の値をチェックし、処理前にCONTENT_TYPE値を確認する必要があります。


      4.4. スクリプトコマンドライン
      一部のシステムは、CGIスクリプトに文字列の配列を供給する方法をサポートしています。これは '索引付けされた' HTTPクエリの場合にのみ使用されます。これは、符号を付けられていない "="文字を含まないURIクエリ文字列を持つ 'get'または 'head'要求によって識別されます。そのような要求の場合、サーバーはクエリ文字列を検索文字列として扱い、ルールを使用して単語に解析する必要があります。 
            search-string = search-word *( "+" search-word )
            search-word   = 1*schar
            schar         = unreserved | escaped | xreserved
            xreserved     = ";" | "/" | "?" | ":" | "@" | "&" | "=" | "," |
                        "$"


      解析後、各検索語はURLデコードされ、オプションでシステム定義の方法でエンコードされ、コマンドライン引数リストに追加されます。
      サーバーが引数リストの一部を作成できない場合、サーバーはコマンドライン情報を生成してはいけません。たとえば、引数の数はオペレーティングシステムまたはサーバーの制限よりも大きく、または単語の1つが引数として表現できない可能性があります。
      スクリプトは、QUERY_STRING値にエンコードされていない"="文字が含まれているかどうかを確認する必要があり、そのコマンドライン引数を使用しないでください。
}

https://tex2e.github.io/rfc-translater/html/rfc3875.html#6--CGI-Response
cgi response {
      スクリプトは常に空でない応答を提供する。
      スクリプトは、要求を処理してその応答を準備するときにREQUEST_METHOD変数をチェックする必要があります。 
      サーバは、スクリプトからデータを受信する必要があるタイムアウト期間を実装することができる。サーバー実装がそのようなタイムアウトを定義し、タイムアウト期間内のスクリプトからデータを受信しない場合、サーバーはスクリプトプロセスを終了することがあります。 
      6.2. 応答タイプ 
     応答は、メッセージヘッダとメッセージ本文を含む、空白行で区切られています。message-headerには、1つ以上のヘッダーフィールドが含まれています。本体はNULLかもしれません。 
     スクリプトは、文書応答、ローカルリダイレクト応答、またはクライアントリダイレクト（オプションの文書）のいずれかを返す必要があります。以下の応答定義では、応答内のヘッダーフィールドの順序は有意ではありません（BNFに表示されるものではあります）。ヘッダーフィールドはセクション6.3で定義されています。 
}



//やること
meta変数の設定
urlの解析


